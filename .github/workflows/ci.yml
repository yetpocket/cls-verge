name: Release CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v**

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "yarn"

      - name: Install Dependencies (ubuntu only)
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -y tree libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf openssl

      - name: Yarn install and check
        run: |
          yarn install --network-timeout 1000000 --frozen-lockfile
          yarn run check

      # - name: Tauri build
      #   uses: tauri-apps/tauri-action@v0
      #   # enable cache even though failed
      #   # continue-on-error: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      #     TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      #     GITHUB_REPOSITORY: ${{ github.repository }}
      #   with:
      #     tagName: v__VERSION__
      #     releaseName: "Clash Verge v__VERSION__"
      #     releaseBody: "More new features are now supported."
      #     releaseDraft: false
      #     prerelease: true
      - name: BundleLinux
        if: startsWith(matrix.os, 'ubuntu-')
        # rebuild with env settings
        run: |
          yarn build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          VITE_WIN_PORTABLE: 1
      - name: BuildWindows
        if: startsWith(matrix.os, 'windows-')
        # rebuild with env settings
        run: |
          yarn build
          yarn run portable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          VITE_WIN_PORTABLE: 1
      - name: BuildMac
        if: startsWith(matrix.os, 'macos-')
        # rebuild with env settings
        run: |
          yarn build
          rustup target add aarch64-apple-darwin
          yarn build-m1
          tree src-tauri/target/release/bundle
          src-tauri/target/aarch64-apple-darwin/bundle/
          ls src-tauri/target
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          VITE_WIN_PORTABLE: 1
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: ${{  success() }}
        with:
          tag_name: release-${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/appimage/*.AppImage
            src-tauri/target/release/bundle/appimage/*.deb

            src-tauri/target/release/bundle/windows/*.exe
            src-tauri/target/release/bundle/windows/*.msi

            src-tauri/target/release/bundle/macos/Clash Verge.aarch64.app.tar.gz
            # mac m1
            src-tauri/target/aarch64-apple-darwin/bundle/macos/Clash Verge.aarch64.app.tar.gz
            src-tauri/target/aarch64-apple-darwin/bundle/macos/Clash Verge.aarch64.app.tar.gz.sig
          prerelease: false
          generate_release_notes: false
          body: release

  release-update:
    needs: release
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: "16"
          cache: "yarn"

      - name: Yarn install
        run: yarn install --network-timeout 1000000 --frozen-lockfile

      - name: Release updater file
        run: yarn run updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
